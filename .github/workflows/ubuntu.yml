name: ubuntu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Ensure tools (bzip2 etc.)
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y bzip2

      - name: Download and install m68k-xelf
        env:
          TARBALL_URL: https://github.com/yunkya2/elf2x68k/releases/download/20240929/elf2x68k-Linux-20240929.tar.bz2
          TARBALL: elf2x68k.tar.bz2
        run: |
          set -euxo pipefail

          workdir="$RUNNER_TEMP/m68k-xelf"
          rm -rf "$workdir"
          mkdir -p "$workdir"
          cd "$workdir"

          curl -fL "$TARBALL_URL" -o "$TARBALL"
          tar -tf "$TARBALL" | tee tar.list
          top="$(awk -F/ 'NR==1{print $1; exit}' tar.list || true)"
          tar -xf "$TARBALL"

          # bin 探索（<top>/bin と <top>/images/bin の両対応）
          mapfile -t bins < <(find "$top" -maxdepth 3 -type d \( -name bin -o -path "*/images/bin" \) -print)
          [ "${#bins[@]}" -gt 0 ] || { echo "ERROR: bin not found"; find "$top" -maxdepth 3 -print; exit 1; }

          pick=""
          for b in "${bins[@]}"; do
            if compgen -G "$b/*" > /dev/null; then
              pick="$b"
              ls "$b" | grep -qE '^m68k-.*-gcc|^m68k-xelf-gcc|elf2x68k\.py$' && break || true
            fi
        done
          [ -n "$pick" ] || { echo "ERROR: bin candidates empty"; printf '%s\n' "${bins[@]}"; exit 1; }

        # 実行ビット（空振り防止）
        compgen -G "$pick/*" > /dev/null && chmod +x "$pick/"* || true

        # ★ ここを絶対パスで！ ★
        pick_abs="$(readlink -f "$pick" || realpath "$pick")"
        echo "$pick_abs" >> "$GITHUB_PATH"

        # その場でも軽く確認
        "$pick_abs/m68k-xelf-gcc" --version || true
        echo "BIN_DIR=$pick_abs"
        ls -al "$pick_abs"

      - name: Build
        run: |
          set -euxo pipefail
          which m68k-xelf-gcc || true
          m68k-xelf-gcc --version || true
          if [ -f Makefile ]; then
            make -j
          elif [ -d src ] && [ -f src/Makefile ]; then
            cd src && make -j
          else
            echo "Makefile が見つかりません。必要に応じてビルドコマンドを調整してください。"
            exit 1
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: build-out
          path: |
            ./build/**
            ./src/**.x
            ./src/**.bin
            ./src/**.elf
