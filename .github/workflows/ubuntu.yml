name: ubuntu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Ensure tools (bzip2 etc.)
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y bzip2

      - name: Download and install m68k-xelf
        env:
          TARBALL_URL: https://github.com/yunkya2/elf2x68k/releases/download/20240929/elf2x68k-Linux-20240929.tar.bz2
          TARBALL: elf2x68k.tar.bz2
        run: |
          set -euxo pipefail

          workdir="$RUNNER_TEMP/m68k-xelf"
          rm -rf "$workdir"
          mkdir -p "$workdir"
          cd "$workdir"

          curl -fL "$TARBALL_URL" -o "$TARBALL"
          # 中身確認用に目録を保存（デバッグしやすくする）
          tar -tf "$TARBALL" | tee tar.list

          # トップディレクトリ名（大半の配布物は先頭要素がディレクトリ）
          top="$(awk -F/ 'NR==1{print $1; exit}' tar.list)"
          if [ -z "$top" ] || [ "$top" = "." ]; then
            # 念のためフォールバック：サブディレクトリを含む最初の要素
            top="$(awk -F/ '$0 ~ /\// {print $1; exit}' tar.list || true)"
          fi

          # 展開
          tar -xf "$TARBALL"

          if [ -z "$top" ] || [ ! -d "$top" ]; then
            echo "ERROR: 展開トップディレクトリを特定できません。内容を表示します。"
            cat tar.list
            exit 1
          fi

          # 候補の bin ディレクトリを列挙（<top>/bin と <top>/images/bin の両対応）
          mapfile -t bins < <(find "$top" -maxdepth 3 -type d \( -name bin -o -path "*/images/bin" \) -print)

          if [ "${#bins[@]}" -eq 0 ]; then
            echo "ERROR: bin ディレクトリが見つかりません。構成を出力します。"
            find "$top" -maxdepth 3 -print
            exit 1
          fi

          # 優先度: 実ファイルが入っている bin / m68k-xelf-gcc を含む bin
          pick=""
          for b in "${bins[@]}"; do
            if compgen -G "$b/*" > /dev/null; then
              pick="$b"
              # コンパイラっぽいものがあれば即決
              ls "$b" | grep -qE '^m68k-.*-gcc|^m68k-xelf-gcc|elf2x68k\.py$' && break || true
            fi
          done

          if [ -z "$pick" ]; then
            echo "ERROR: 候補は見つかったが中身が空でした。候補一覧:"
            printf '%s\n' "${bins[@]}"
            exit 1
          fi

          # 実行ビット付与（空振り防止）
          if compgen -G "$pick/*" > /dev/null; then
            chmod +x "$pick/"* || true
          fi

          # ジョブ全体に PATH を通す
          echo "$pick" >> "$GITHUB_PATH"

          echo "BIN_DIR=$pick"
          ls -al "$pick"

      - name: Build
        run: |
          set -euxo pipefail
          which m68k-xelf-gcc || true
          m68k-xelf-gcc --version || true
          if [ -f Makefile ]; then
            make -j
          elif [ -d src ] && [ -f src/Makefile ]; then
            cd src && make -j
          else
            echo "Makefile が見つかりません。必要に応じてビルドコマンドを調整してください。"
            exit 1
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: build-out
          path: |
            ./build/**
            ./src/**.x
            ./src/**.bin
            ./src/**.elf
